package com.liangfeizc.databinding.databinding;
import com.liangfeizc.databinding.R;
import com.liangfeizc.databinding.BR;
import android.view.View;
public class ActivityBasicBinding extends android.databinding.ViewDataBinding {
    
    private static final android.databinding.ViewDataBinding.IncludedLayouts sIncludes;
    private static final android.util.SparseIntArray sViewsWithIds;
    static {
        sIncludes = null;
        sViewsWithIds = null;
    }
    // views
    private final android.widget.TableLayout mboundView0;
    private final android.widget.TextView mboundView1;
    private final android.widget.TextView mboundView2;
    private final android.widget.TextView mboundView3;
    private final android.widget.TextView mboundView4;
    private final android.widget.TextView mboundView5;
    // variables
    private com.liangfeizc.databinding.model.User mUser;
    // values
    // listeners
    
    public ActivityBasicBinding(android.databinding.DataBindingComponent bindingComponent, View root) {
        super(bindingComponent, root, 0);
        final Object[] bindings = mapBindings(bindingComponent, root, 6, sIncludes, sViewsWithIds);
        this.mboundView0 = (android.widget.TableLayout) bindings[0];
        this.mboundView0.setTag(null);
        this.mboundView1 = (android.widget.TextView) bindings[1];
        this.mboundView1.setTag(null);
        this.mboundView2 = (android.widget.TextView) bindings[2];
        this.mboundView2.setTag(null);
        this.mboundView3 = (android.widget.TextView) bindings[3];
        this.mboundView3.setTag(null);
        this.mboundView4 = (android.widget.TextView) bindings[4];
        this.mboundView4.setTag(null);
        this.mboundView5 = (android.widget.TextView) bindings[5];
        this.mboundView5.setTag(null);
        setRootTag(root);
        invalidateAll();
    }
    
    @Override
    public void invalidateAll() {
        synchronized(this) {
            mDirtyFlags = 0b10L;
        }
        requestRebind();
    }
    
    @Override
    public boolean hasPendingBindings() {
        synchronized(this) {
            if (mDirtyFlags != 0) {
                return true;
            }
        }
        return false;
    }
    
    public boolean setVariable(int variableId, Object variable) {
        switch(variableId) {
            case BR.user :
                setUser((com.liangfeizc.databinding.model.User) variable);
                return true;
        }
        return false;
    }
    
    public void setUser(com.liangfeizc.databinding.model.User user) {
        this.mUser = user;
        synchronized(this) {
            mDirtyFlags |= 0b1L;
        }
        super.requestRebind();
    }
    public com.liangfeizc.databinding.model.User getUser() {
        return mUser;
    }
    
    @Override
    protected boolean onFieldChange(int localFieldId, Object object, int fieldId) {
        switch (localFieldId) {
        }
        return false;
    }
    
    @Override
    protected void executeBindings() {
        long dirtyFlags = 0;
        synchronized(this) {
            dirtyFlags = mDirtyFlags;
            mDirtyFlags = 0;
        }
        int ageUser = 0;
        java.lang.String displayNameUser = null;
        java.lang.String StringValueOfStringA = null;
        int IsAdultUserVISIBLEVi = 0;
        com.liangfeizc.databinding.model.User user = mUser;
        java.lang.String DisplayNameUserObjec = null;
        boolean isAdultUser = false;
        java.lang.String StringUtilsCapitaliz = null;
        java.lang.String firstNameUser = null;
        boolean DisplayNameUserObjec1 = false;
        java.lang.String lastNameUser = null;
    
        if ((dirtyFlags & 0b11L) != 0) {
            // read user~
            user = user;
        
            if (user != null) {
                // read age~.~user~
                ageUser = user.getAge();
                // read displayName~.~user~
                displayNameUser = user.getDisplayName();
                // read isAdult~.~user~
                isAdultUser = user.isAdult();
                // read firstName~.~user~
                firstNameUser = user.getFirstName();
                // read lastName~.~user~
                lastNameUser = user.getLastName();
            }
            if((dirtyFlags & 0b11L) != 0) {
                if (isAdultUser) {
                    dirtyFlags |= 0b1000L;
                } else {
                    dirtyFlags |= 0b100L;
                }}
        
            // read String~~valueOf~String~~age~.~user~
            StringValueOfStringA = java.lang.String.valueOf(ageUser);
            // read ==~displayName~.~user~~Objectnull
            DisplayNameUserObjec1 = displayNameUser==null;
            // read ?:isAdult~.~user~~VISIBLE~.~View~~GONE~.~View~
            IsAdultUserVISIBLEVi = isAdultUser ? android.view.View.VISIBLE : android.view.View.GONE;
            // read StringUtils~~capitalize~StringUtils~~firstName~.~user~
            StringUtilsCapitaliz = com.liangfeizc.databinding.utils.MyStringUtils.capitalize(firstNameUser);
            if((dirtyFlags & 0b11L) != 0) {
                if (DisplayNameUserObjec1) {
                    dirtyFlags |= 0b100000L;
                } else {
                    dirtyFlags |= 0b10000L;
                }}
        }
        // batch finished
    
        if ((dirtyFlags & 0b11L) != 0) {
            // read ?:==~displayName~.~user~~Objectnull~lastName~.~user~~displayName~.~user~
            DisplayNameUserObjec = DisplayNameUserObjec1 ? lastNameUser : displayNameUser;
        }
        // batch finished
        if ((dirtyFlags & 0b11L) != 0) {
            // api target 1
            this.mboundView1.setText(DisplayNameUserObjec);
            this.mboundView2.setText(StringUtilsCapitaliz);
            this.mboundView3.setText(lastNameUser);
            this.mboundView4.setText(StringValueOfStringA);
            this.mboundView5.setVisibility(IsAdultUserVISIBLEVi);
        }
    }
    // Listener Stub Implementations
    // dirty flag
    private  long mDirtyFlags = 0b1111111111111111111111111111111111111111111111111111111111111111L;
    
    public static ActivityBasicBinding inflate(android.view.LayoutInflater inflater, android.view.ViewGroup root, boolean attachToRoot) {
        return inflate(inflater, root, attachToRoot, android.databinding.DataBindingUtil.getDefaultComponent());
    }
    public static ActivityBasicBinding inflate(android.view.LayoutInflater inflater, android.view.ViewGroup root, boolean attachToRoot, android.databinding.DataBindingComponent bindingComponent) {
        return android.databinding.DataBindingUtil.<ActivityBasicBinding>inflate(inflater, com.liangfeizc.databinding.R.layout.activity_basic, root, attachToRoot, bindingComponent);
    }
    public static ActivityBasicBinding inflate(android.view.LayoutInflater inflater) {
        return inflate(inflater, android.databinding.DataBindingUtil.getDefaultComponent());
    }
    public static ActivityBasicBinding inflate(android.view.LayoutInflater inflater, android.databinding.DataBindingComponent bindingComponent) {
        return bind(inflater.inflate(com.liangfeizc.databinding.R.layout.activity_basic, null, false), bindingComponent);
    }
    public static ActivityBasicBinding bind(android.view.View view) {
        return bind(view, android.databinding.DataBindingUtil.getDefaultComponent());
    }
    public static ActivityBasicBinding bind(android.view.View view, android.databinding.DataBindingComponent bindingComponent) {
        if (!"layout/activity_basic_0".equals(view.getTag())) {
            throw new RuntimeException("view tag isn't correct on view:" + view.getTag());
        }
        return new ActivityBasicBinding(bindingComponent, view);
    }
}
    /* flag mapping
        flag 0: user~
        flag 1: INVALIDATE ANY
        flag 2: ?:isAdult~.~user~~VISIBLE~.~View~~GONE~.~View~== false
        flag 3: ?:isAdult~.~user~~VISIBLE~.~View~~GONE~.~View~== true
        flag 4: ?:==~displayName~.~user~~Objectnull~lastName~.~user~~displayName~.~user~== false
        flag 5: ?:==~displayName~.~user~~Objectnull~lastName~.~user~~displayName~.~user~== true
    flag mapping end*/
    //end
