package com.liangfeizc.databinding.databinding;
import com.liangfeizc.databinding.R;
import com.liangfeizc.databinding.BR;
import android.view.View;
public class ActivityConversionsBinding extends android.databinding.ViewDataBinding {
    
    private static final android.databinding.ViewDataBinding.IncludedLayouts sIncludes;
    private static final android.util.SparseIntArray sViewsWithIds;
    static {
        sIncludes = null;
        sViewsWithIds = null;
    }
    // views
    private final android.widget.LinearLayout mboundView0;
    private final android.view.View mboundView1;
    private final android.widget.Button mboundView2;
    // variables
    private float mHeight;
    private android.databinding.ObservableBoolean mIsError;
    // values
    // listeners
    
    public ActivityConversionsBinding(android.databinding.DataBindingComponent bindingComponent, View root) {
        super(bindingComponent, root, 1);
        final Object[] bindings = mapBindings(bindingComponent, root, 3, sIncludes, sViewsWithIds);
        this.mboundView0 = (android.widget.LinearLayout) bindings[0];
        this.mboundView0.setTag(null);
        this.mboundView1 = (android.view.View) bindings[1];
        this.mboundView1.setTag(null);
        this.mboundView2 = (android.widget.Button) bindings[2];
        this.mboundView2.setTag(null);
        setRootTag(root);
        invalidateAll();
    }
    
    @Override
    public void invalidateAll() {
        synchronized(this) {
            mDirtyFlags = 0b100L;
        }
        requestRebind();
    }
    
    @Override
    public boolean hasPendingBindings() {
        synchronized(this) {
            if (mDirtyFlags != 0) {
                return true;
            }
        }
        return false;
    }
    
    public boolean setVariable(int variableId, Object variable) {
        switch(variableId) {
            case BR.height :
                setHeight((float) variable);
                return true;
            case BR.isError :
                setIsError((android.databinding.ObservableBoolean) variable);
                return true;
        }
        return false;
    }
    
    public void setHeight(float height) {
        this.mHeight = height;
        synchronized(this) {
            mDirtyFlags |= 0b10L;
        }
        super.requestRebind();
    }
    public float getHeight() {
        return mHeight;
    }
    public void setIsError(android.databinding.ObservableBoolean isError) {
        updateRegistration(0, isError);
        this.mIsError = isError;
        synchronized(this) {
            mDirtyFlags |= 0b1L;
        }
        super.requestRebind();
    }
    public android.databinding.ObservableBoolean getIsError() {
        return mIsError;
    }
    
    @Override
    protected boolean onFieldChange(int localFieldId, Object object, int fieldId) {
        switch (localFieldId) {
            case 0 :
                return onChangeIsError((android.databinding.ObservableBoolean) object, fieldId);
        }
        return false;
    }
    private boolean onChangeIsError(android.databinding.ObservableBoolean isError, int fieldId) {
        switch (fieldId) {
            case BR._all:
                synchronized(this) {
                    mDirtyFlags |= 0b1L;
                }
                return true;
        }
        return false;
    }
    
    @Override
    protected void executeBindings() {
        long dirtyFlags = 0;
        synchronized(this) {
            dirtyFlags = mDirtyFlags;
            mDirtyFlags = 0;
        }
        boolean isErrorGetIsError = false;
        float height = mHeight;
        java.lang.String IsErrorGetIsErrorAnd = null;
        android.databinding.ObservableBoolean isError = mIsError;
        int IsErrorGetIsErrorAnd1 = 0;
    
        if ((dirtyFlags & 0b110L) != 0) {
            // read height~
            height = height;
        }
        if ((dirtyFlags & 0b101L) != 0) {
            // read isError~
            isError = isError;
            updateRegistration(0, isError);
        
            if (isError != null) {
                // read isError~~get~isError~
                isErrorGetIsError = isError.get();
            }
            if((dirtyFlags & 0b101L) != 0) {
                if (isErrorGetIsError) {
                    dirtyFlags |= 0b10000L;
                    dirtyFlags |= 0b1000000L;
                } else {
                    dirtyFlags |= 0b1000L;
                    dirtyFlags |= 0b100000L;
                }}
        
            // read ?:isError~~get~isError~~@android:string/red~~@android:string/white~
            IsErrorGetIsErrorAnd = isErrorGetIsError ? getRoot().getResources().getString(R.string.red) : getRoot().getResources().getString(R.string.white);
            // read ?:isError~~get~isError~~@android:color/red~~@android:color/white~
            IsErrorGetIsErrorAnd1 = isErrorGetIsError ? getRoot().getResources().getColor(R.color.red) : getRoot().getResources().getColor(R.color.white);
        }
        // batch finished
        if ((dirtyFlags & 0b101L) != 0) {
            // api target 1
            android.databinding.adapters.ViewBindingAdapter.setBackground(this.mboundView1, com.liangfeizc.databinding.sample.converters.ConversionsActivity.convertColorToDrawable(IsErrorGetIsErrorAnd1));
            this.mboundView2.setText(IsErrorGetIsErrorAnd);
        }
        if ((dirtyFlags & 0b110L) != 0) {
            // api target 1
            com.liangfeizc.databinding.sample.converters.ConversionsActivity.setLayoutHeight(this.mboundView1, height);
        }
    }
    // Listener Stub Implementations
    // dirty flag
    private  long mDirtyFlags = 0b1111111111111111111111111111111111111111111111111111111111111111L;
    
    public static ActivityConversionsBinding inflate(android.view.LayoutInflater inflater, android.view.ViewGroup root, boolean attachToRoot) {
        return inflate(inflater, root, attachToRoot, android.databinding.DataBindingUtil.getDefaultComponent());
    }
    public static ActivityConversionsBinding inflate(android.view.LayoutInflater inflater, android.view.ViewGroup root, boolean attachToRoot, android.databinding.DataBindingComponent bindingComponent) {
        return android.databinding.DataBindingUtil.<ActivityConversionsBinding>inflate(inflater, com.liangfeizc.databinding.R.layout.activity_conversions, root, attachToRoot, bindingComponent);
    }
    public static ActivityConversionsBinding inflate(android.view.LayoutInflater inflater) {
        return inflate(inflater, android.databinding.DataBindingUtil.getDefaultComponent());
    }
    public static ActivityConversionsBinding inflate(android.view.LayoutInflater inflater, android.databinding.DataBindingComponent bindingComponent) {
        return bind(inflater.inflate(com.liangfeizc.databinding.R.layout.activity_conversions, null, false), bindingComponent);
    }
    public static ActivityConversionsBinding bind(android.view.View view) {
        return bind(view, android.databinding.DataBindingUtil.getDefaultComponent());
    }
    public static ActivityConversionsBinding bind(android.view.View view, android.databinding.DataBindingComponent bindingComponent) {
        if (!"layout/activity_conversions_0".equals(view.getTag())) {
            throw new RuntimeException("view tag isn't correct on view:" + view.getTag());
        }
        return new ActivityConversionsBinding(bindingComponent, view);
    }
}
    /* flag mapping
        flag 0: isError~
        flag 1: height~
        flag 2: INVALIDATE ANY
        flag 3: ?:isError~~get~isError~~@android:string/red~~@android:string/white~== false
        flag 4: ?:isError~~get~isError~~@android:string/red~~@android:string/white~== true
        flag 5: ?:isError~~get~isError~~@android:color/red~~@android:color/white~== false
        flag 6: ?:isError~~get~isError~~@android:color/red~~@android:color/white~== true
    flag mapping end*/
    //end
